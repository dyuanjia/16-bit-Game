module gen (
    input clk,
    input en,   // enable
    input rst,  // reset
    input seed[32],
    output out[16]
  ) {
  
  .clk(clk) {
    .rst(rst) {
      fsm states = {START, SPIN, DONE};
      dff regs[32];
      dff timer[29];
      pn_gen rand;
    }
  }
  
  // Initialize alu
  alu alu16;
  
  always {
    rand.seed = seed;
    rand.next = 0;                   // don't generate new numbers
    out = 0;
    
    // Connect inputs and outputs of external signals to the ALU unit
    alu16.a = 16b0; // get value from random generator
    alu16.b = 16b0;
    alu16.alufn = 7b0;
 
    case (states.q) {
      states.START:
        rand.seed = seed;
        rand.next = 0;
        timer.d = 0;
        if(en==1)
          states.d=states.SPIN;
        
      states.SPIN:
        rand.next = 1;             // generate a new number
        timer.d=timer.q + 1;
        if(timer.q[27]==1)
          states.d=states.DONE;
        else if(timer.q[20]==1)
          regs.d=rand.num;
        else
          out=regs.q[15:0];
          
      states.DONE:
        alu16.a = rand.num[31:16]; // get value from random generator
        alu16.b = rand.num[15:0];
        if(rand.num[17:14] == 4b0000){
          alu16.alufn = 7b0;} // ADD
        if(rand.num[17:14] == 4b0001){
          alu16.alufn = 7b1;} // SUB
        if(rand.num[17:14] == 4b0010){
          alu16.alufn = 7b0011000;} // AND
        if(rand.num[17:14] == 4b0011){
          alu16.alufn = 7b0011110;} // OR
        if(rand.num[17:14] == 4b0100){
          alu16.alufn = 7b0010110;} // XOR
        if(rand.num[17:14] == 4b0101){
          alu16.alufn = 7b0011010;} // A
        if(rand.num[17:14] == 4b0110){
          alu16.alufn = 7b0010111;} // NAND
        if(rand.num[17:14] == 4b0111){
          alu16.alufn = 7b0010001;} // NOR
        if(rand.num[17:14] == 4b1000){
          alu16.alufn = 7b0011001;} // XNOR
        if(rand.num[17:14] == 4b1001){
          alu16.alufn = 7b0110011;} // B
        if(rand.num[17:14] == 4b1010){
          alu16.alufn = 7b0100000;} // SHL
        if(rand.num[17:14] == 4b1011){
          alu16.alufn = 7b0100001;} // SHR
        if(rand.num[17:14] == 4b1100){
          alu16.alufn = 7b0100011;} // SRA
        if(rand.num[17:14] == 4b1101){
          alu16.alufn = 7b1000000;} // MUL   
        if(rand.num[17:14] == 4b1110){
          alu16.alufn = 7b0;} // ADD
        if(rand.num[17:14] == 4b1111){
          alu16.alufn = 7b1;} // SUB
        out = alu16.out;
        timer.d = 0;
        if(en==1)
          states.d=states.SPIN;        
    }
  }
}